// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace StudioGhibili.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\amina\Desktop\StudioGhibili\StudioGhibili\Components\CharacterList.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\amina\Desktop\StudioGhibili\StudioGhibili\Components\CharacterList.razor"
using StudioGhibili.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\amina\Desktop\StudioGhibili\StudioGhibili\Components\CharacterList.razor"
using StudioGhibili.Services;

#line default
#line hidden
#nullable disable
    public partial class CharacterList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 89 "C:\Users\amina\Desktop\StudioGhibili\StudioGhibili\Components\CharacterList.razor"
       
    Character selectCharacter;
    string selectCharacterName;

    // Called when button is clicked
    void SelectCharacter(string name)
    {
        selectCharacterName = name;
        selectCharacter = CharacterService.GetCharacters().First(x => x.name == name);
        //Get the current rating whenever the character is selected
        GetCurrentRating();
    }
    // ADD Ratings Section

    // Notice that these vars are outside the func so we can use them everywhere here, global vars ;)
    int currentRatingAvg = 0;
    int voteCount = 0;
    string voteLable;

    // this func will calculate the currentRatingAvg which used to draw the stars *** ;)
    void GetCurrentRating()
    {
        if(selectCharacter.Ratings == null)
        {
            currentRatingAvg = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectCharacter.Ratings.Count();
            voteLable = voteCount > 1 ? "Votes" : "Vote";
            currentRatingAvg = selectCharacter.Ratings.Sum() / voteCount;
            // you can take the average directly from C# linq withnot need to manually calculate it
            // SelectedCharacter.Ratings.Average();
        }

        System.Console.WriteLine($"Current Rating for {selectCharacter.name}: {currentRatingAvg}");
    }

    // this function gets called when a star is clicked, each star has a number (currentStars) indicating the rating and passed to this func
    void SubmitRating(int rating)
    {
        // cheesy test 
        System.Console.WriteLine($"Rating received for {selectCharacterName}: {rating}");

        // it's that function we used to pass its para by url queries, but now from here ;)
        CharacterService.AddRatings(selectCharacterName, rating);

        // this func that get called when button clicked, but we called again here to reflect the updates 
        // show the updated character obj along with the new rating
        SelectCharacter(selectCharacterName);
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private JsonCharacterService CharacterService { get; set; }
    }
}
#pragma warning restore 1591
